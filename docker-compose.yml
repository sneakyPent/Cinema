version: "3.8"



services:
    db:
        image: rwgrim/docker-noop
        depends_on:
            - keyrock_db
            - mongo-orion
            - mongo-data

    db-gui:
        image: rwgrim/docker-noop
        depends_on:
            - phpmyadmin
            - mongo-express-data
            - mongo-express-orion


    fiware_services:
        image: rwgrim/docker-noop
        depends_on:
            - keyrockIDM
            - orion_CB
            - orion-pep-proxy-wilma
            - data-pep-proxy-wilma

    myApp:
        image: rwgrim/docker-noop
        depends_on:
            - vue
#           - application




    # --------------------------------------- DATABASES ---------------------------------------
    mongo-orion:
        container_name: DB-ORION
        image: mongo:3.6
        restart: always
        ports:
            - "27017:27017"
        command: mongod --nojournal --port 27017 --smallfiles --oplogSize 128
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: mongoadmin
            MONGO_INITDB_DATABASE: orion_DB
            MONGODB_USER: orion
            MONGODB_DATABASE: orion_DB
            MONGODB_PASS: orion
        volumes:
            - ./dbDatas/mongo-orion-dt:/data/db

    mongo-data:
        container_name: DB-DATA
        image: mongo:3.6
        restart: always
        ports:
            - "27018:27017"
        command: mongod --nojournal --port 27018 --smallfiles --oplogSize 128
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: mongoadmin
            MONGO_INITDB_DATABASE: myCinema_DB
            MONGODB_USER: cinema
            MONGODB_DATABASE: myCinema_DB
            MONGODB_PASS: cinema
        volumes: 
            - ./dbDatas/mongo-data:/data/db

    keyrock_db:
        container_name: DB-KEYROCK
        image: mysql/mysql-server:5.7.21
        expose:
            - 3306
        ports:
            - '3306:3306'
        environment:
            - MYSQL_ROOT_PASSWORD=idm
            - MYSQL_ROOT_HOST=%
        volumes:
            - ./dbDatas/keyrock_db:/var/lib/mysql

    # ------------------------------------ DATABASES UIs --------------------------------

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:4.8
        container_name: PHPMYADMIN
        ports:
            - "8083:80"
        environment:
            - PMA_HOST=keyrock_db
        depends_on:
            - keyrock_db
        links:
            - keyrock_db:mysql
        restart: always

    mongo-express-data:
        image: mongo-express
        container_name: MN-DATA-EXPRESS
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin
            ME_CONFIG_MONGODB_SERVER: mongo-data
            ME_CONFIG_MONGODB_PORT: 27018

    mongo-express-orion:
        image: mongo-express
        container_name: MN-ORION-EXPRESS
        restart: always
        ports:
            - 8082:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin
            ME_CONFIG_MONGODB_SERVER: mongo-orion
            ME_CONFIG_MONGODB_PORT: 27017

 # ------------------------------------ FIWARE APPLICATIONS --------------------------------

    orion_CB:
        container_name: FIWARE-ORION
        image: fiware/orion
        ports:
            - "1026:1026"
        command: -dbhost mongo-orion
        environment:
            - ORION_MONGO_HOST=mongo-orion
            - ORION_PORT=1026
            - ORION_MONGO_USER=root
            - ORION_MONGO_PASSWORD=mongoadmin
        links:
            - mongo-orion

    keyrockIDM:
        container_name: FIWARE-KEYROCK
        image: fiware/idm
        expose:
            - 3005
        ports:
            - '3005:3005'
            - '3443:3443'
        environment:
            - IDM_DB_HOST=keyrock_db
            - IDM_PORT=3005
            - IDM_HOST=http://localhost:3005
        links:
            - keyrock_db
        volumes:
            - .:/fiware/keyrockIDM

   data-pep-proxy-wilma:
        container_name: PEP-PROXY-DATA
        image: fiware/pep-proxy
        depends_on:
            - keyrockIDM
        ports:
            - "1028:1028"
        expose:
            - "1028"
        environment:
            - PEP_PROXY_APP_HOST=application
            - PEP_PROXY_APP_PORT=8000
            - PEP_PROXY_PORT=1028
            - PEP_PROXY_IDM_HOST=keyrockIDM
            - PEP_PROXY_HTTPS_ENABLED=false
            - PEP_PROXY_AUTH_ENABLED=false
            - PEP_PROXY_IDM_SSL_ENABLED=false
            - PEP_PROXY_IDM_PORT=3005
            - PEP_PROXY_APP_ID=7f2a83fb-6ce2-4624-be71-ad8a1a95d98b
            - PEP_PROXY_USERNAME=pep_proxy_b2f99457-27e3-4c63-b1dd-230846fb7533
            - PEP_PASSWORD=pep_proxy_cdd7ce7d-4415-4352-a3d1-02ad91a8f56c
            - PEP_PROXY_PDP=idm
            - PEP_PROXY_MAGIC_KEY=1234

    orion-pep-proxy-wilma:
        container_name: PEP-PROXY-ORION
        image: fiware/pep-proxy
        depends_on:
            -   keyrockIDM
        ports:
            -   "1027:1027"
        expose:
            -   "1027"
        environment:
            - PEP_PROXY_APP_HOST=orion_CB
            - PEP_PROXY_APP_PORT=1026
            - PEP_PROXY_PORT=1027
            - PEP_PROXY_IDM_HOST=keyrockIDM
            - PEP_PROXY_AUTH_ENABLED=false
            - PEP_PROXY_IDM_SSL_ENABLED=false
            - PEP_PROXY_IDM_PORT=3005
            - PEP_PROXY_APP_ID=9793f1b6-6593-4019-9510-654eb03f9f12
            - PEP_PROXY_USERNAME=pep_proxy_eb4a817d-2f4a-4900-926b-94b295240c2a
            - PEP_PASSWORD=pep_proxy_291ed8d1-f9c1-40b0-b243-f6f678bd5361
            - PEP_PROXY_PDP=idm
            - PEP_PROXY_MAGIC_KEY=ORION

    # ------------------------------------ MY APPLICATION ------------------------------------



    application:
        container_name: APPLICATION
        build:
            context: .
            dockerfile: DockerFiles/python/pythonDF
        command: sh scripts/django.sh
        expose:
            - "8000"
        volumes:
            - .:/web
        ports:
            - "8000:8000"
        links:
            - mongo-data
        depends_on:
            - vue

    vue:
        restart: always
        container_name: VUE
        build:
            context: .
            dockerfile: DockerFiles/vue/vueDF
        command: sh scripts/frontend.sh
        ports:
            - 80:80
        volumes:
            - .:/frontend